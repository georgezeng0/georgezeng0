{"version":3,"sources":["context.js","SetupForm.js","Loading.js","Modal.js","App.js","index.js"],"names":["AppContext","React","createContext","AppProvider","children","useState","isLoading","setIsLoading","isSetup","setIsSetup","questions","setQuestions","questionNum","setQuestionNum","score","setScore","amount","setAmount","category","setCategory","categoryList","setCategoryList","difficulty","setDifficulty","error","setError","isModal","setIsModal","getQuestions","a","axios","params","response","data","response_code","results","console","log","getCategories","trivia_categories","useEffect","Provider","value","handleSubmit","e","preventDefault","handleAnswer","correct","length","resetQuiz","useGlobalContext","useContext","SetupForm","className","action","onSubmit","htmlFor","type","id","min","max","onChange","target","name","map","cat","key","Loading","Modal","question","correct_answer","incorrect_answers","numberAnswers","randomPosition","Math","floor","random","parseInt","onClick","dangerouslySetInnerHTML","__html","Array","_","i","randomIncorrect","splice","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53d9ed11.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport React, { useState, useContext, useEffect } from 'react'\r\n\r\n// const table = {\r\n//   sports: 21,\r\n//   history: 23,\r\n//   politics: 24,\r\n// }\r\n\r\nconst API_ENDPOINT = 'https://opentdb.com/api.php'\r\n\r\nconst CategoryUrl = \"https://opentdb.com/api_category.php\"\r\n\r\nconst AppContext = React.createContext()\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isSetup, setIsSetup]= useState(true)\r\n  const [questions, setQuestions] = useState([])\r\n  const [questionNum, setQuestionNum] = useState(0)\r\n  const [score, setScore] = useState(0)\r\n  const [amount, setAmount] = useState(5);\r\n  const [category, setCategory] = useState('');\r\n  const [categoryList, setCategoryList] = useState([])\r\n  const [difficulty, setDifficulty] = useState('easy');\r\n  const [error, setError] = useState('');\r\n  const [isModal, setIsModal] = useState(false);\r\n\r\n  const getQuestions = async () => {\r\n    setIsLoading(true)\r\n    \r\n    try {const response = await axios(API_ENDPOINT, {\r\n      params: {\r\n        amount: amount,\r\n        category: category,\r\n        difficulty: difficulty\r\n      }\r\n    });\r\n      const data = response.data\r\n      \r\n      if (data.response_code === 0) {\r\n        setQuestions(data.results)\r\n        setIsLoading(false)\r\n        setIsSetup(false)\r\n        setError('')\r\n    } else {\r\n        setIsLoading(false)\r\n        if (data.response_code == 1) {\r\n          setError('Amount is set too high for specific query!')\r\n        } else {\r\n          setError('Something went wrong with the API - try again.')\r\n        }\r\n      }\r\n    } catch (e) {\r\n      setIsLoading(false)\r\n      console.log(e)\r\n    }\r\n  }\r\n  \r\n  const getCategories = async () => {\r\n    const response = await axios(CategoryUrl);\r\n    const data = response.data.trivia_categories\r\n    setCategoryList(data)\r\n    setIsLoading(false)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    getQuestions()\r\n  }\r\n\r\n  const handleAnswer = (correct) => {\r\n    if (correct) setScore(score + 1); \r\n    if (questionNum < questions.length-1) setQuestionNum(questionNum + 1);\r\n    else setIsModal(true)\r\n  } \r\n\r\n  const resetQuiz = () => {\r\n    setScore(0)\r\n    setIsModal(false)\r\n    setIsSetup(true)\r\n    setQuestionNum(0)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCategories()\r\n  },[])\r\n\r\n  return <AppContext.Provider value={{\r\n    isLoading, amount, questions, isSetup, isModal, score, questionNum,\r\n    category, difficulty, error, categoryList,\r\n    setAmount, handleSubmit, setIsModal, handleAnswer, resetQuiz,\r\n    setDifficulty, setCategory\r\n  }}>{children}</AppContext.Provider>\r\n}\r\n// make sure use\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext)\r\n}\r\n\r\nexport { AppContext, AppProvider }\r\n","import React from 'react'\r\nimport { useGlobalContext } from './context'\r\n\r\nconst SetupForm = () => {\r\n  const { amount, error, setAmount, handleSubmit, category, isLoading,\r\n    categoryList, difficulty, setDifficulty, setCategory } = useGlobalContext()\r\n  return <div className=\"quiz\">\r\n    <h2>Trivia Quiz</h2>\r\n    {error && <div className=\"error\">{error}</div>}\r\n    <form action=\"\" className='setup-form' onSubmit={(e)=>handleSubmit(e)}>\r\n      <div className='form-control'>\r\n        <label htmlFor=\"amount\">Number of Questions</label>\r\n        <input type=\"number\" id=\"amount\" className='form-input'\r\n          min=\"1\" max=\"50\"\r\n          value={amount} onChange={(e)=>{setAmount(e.target.value)}}\r\n        />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label htmlFor=\"category\">Set Category</label>\r\n        <select id=\"category\" className='form-input' name=\"category\" \r\n        onChange={e=>setCategory(e.target.value)}  \r\n        >\r\n          {isLoading && <option>Loading Categories...</option>}\r\n          <option value={\"\"}>All Categories</option>\r\n          {categoryList.map(cat => {\r\n            return <option key={cat.id} value={cat.id}>{cat.name}</option>\r\n          })}\r\n          \r\n        </select>\r\n      </div>\r\n      <div className='form-control'>\r\n        <label htmlFor=\"difficulty\">Set Difficulty</label>\r\n        <select type=\"number\" id=\"difficulty\" className='form-input'\r\n          onChange={(e)=>{setDifficulty(e.target.value)}}\r\n        >\r\n          <option value=\"easy\">Easy</option>\r\n          <option value=\"medium\">Medium</option>\r\n          <option value=\"hard\">Hard</option>\r\n        </select>\r\n      </div>\r\n      \r\n      <button className='submit-btn'>Start</button>\r\n    </form>\r\n  </div>\r\n}\r\n\r\nexport default SetupForm\r\n","import React from 'react'\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <main>\r\n      <div className='loading'></div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Loading\r\n","import React from 'react'\r\nimport { useGlobalContext } from './context'\r\n\r\nconst Modal = () => {\r\n  const { questions, score, questionNum, handleAnswer,isModal,resetQuiz } = useGlobalContext();\r\n  const { question, correct_answer, incorrect_answers } = questions[questionNum]\r\n  const numberAnswers = incorrect_answers.length+1\r\n  const randomPosition = Math.floor(Math.random() * numberAnswers)\r\n  \r\n\r\n  return <>\r\n    <div className={`modal-container ${isModal&&'isOpen'}`}>\r\n      <div className=\"modal-content\">\r\n        <h2>Congrats!</h2>\r\n        <p>You answered {parseInt(score / questions.length * 100)}% of questions correctly</p>\r\n        <button className=\"close-btn\" onClick={()=>{resetQuiz()}}>Play Again</button>\r\n        </div>\r\n    </div>\r\n    <div className=\"quiz\">\r\n      <p className=\"correct-answers\">Correct Answers: {score}/{questions.length} </p>\r\n      <article className=\"container\">\r\n        <h2 dangerouslySetInnerHTML={{ __html: question }}></h2>\r\n        <div className=\"btn-container\">\r\n          {[...Array(numberAnswers)].map((_,i) => {\r\n            if (i === randomPosition) {\r\n              return <button key={i} className='answer-btn'\r\n                onClick={() => { handleAnswer(true) }}\r\n                dangerouslySetInnerHTML={{__html:correct_answer}}\r\n              ></button>\r\n            }\r\n            const randomIncorrect = incorrect_answers.splice(Math.floor(Math.random()*incorrect_answers.length),1)\r\n            return <button key={i} className='answer-btn'\r\n              onClick={() => { handleAnswer(false) }}\r\n              dangerouslySetInnerHTML={{ __html: randomIncorrect }}\r\n            ></button>\r\n          })}\r\n        </div>\r\n      </article>\r\n      <button className=\"next-question\" onClick={()=>{handleAnswer(false)}}>Next Question</button>\r\n  </div>\r\n  </>\r\n}\r\n\r\nexport default Modal\r\n","import React from 'react'\r\nimport { useGlobalContext } from './context'\r\n\r\nimport SetupForm from './SetupForm'\r\nimport Loading from './Loading'\r\nimport Modal from './Modal'\r\n\r\nfunction App() {\r\n  const { isLoading, isSetup } = useGlobalContext();\r\n\r\n  if (isLoading) return <main className='section'>\r\n    \r\n  <Loading/>  \r\n\r\n</main>\r\n  \r\n  return <main className='section'>\r\n    \r\n      {isSetup? <SetupForm />: <Modal/>}   \r\n    \r\n  </main>\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport { AppProvider } from './context'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppProvider>\r\n      <App />\r\n    </AppProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}